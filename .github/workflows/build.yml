# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Build Openwrt official

on:
  workflow_dispatch:
    inputs:
      target:
        required: true
        default: 'x86-64'
        type: choice
        options:
          - x86-64
          - r4s
          - r2s
      first_build:
        required: true
        default: false
        type: boolean

defaults:
  run:
    shell: bash
  
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: init
        working-directory: /data/openwrt
        run: |
          echo "openwrt_version=$(git describe | sed 's|v||')" >> "$GITHUB_ENV"
          echo "first_build=${{ inputs.first_build }}" >> "$GITHUB_ENV"

      - name: update
        working-directory: /data/openwrt
        run: ./scripts/feeds update -a && ./scripts/feeds install -a && ./feeds/plugin/sync.sh

      - name: config
        working-directory: /data/openwrt
        run: |
          cp feeds/plugin/${{ inputs.target }}.config .config
          [ "${first_build}" == "true" ] && grep 'CONFIG_TARGET' > .config
          rm -rf tmp && make defconfig

      - name: download
        working-directory: /data/openwrt
        run: make download -j8

      - name: compile
        working-directory: /data/openwrt
        run: |
          thread_num=$(($(nproc)+1))
          [ "${first_build}" == "true" ] && thread_num=1
          echo -e "${thread_num} thread compile"
          `make -j${thread_num} || make -j1 V=s` | tee compile.log
          echo "::set-output name=status::success"
          
      - name: artifact
        working-directory: /data/openwrt
        run: |
          mkdir -p artifact
          image_name_pattern=
          if [ "${{ inputs.target }}" == "x86-64" ];then
            image_name_pattern="*${{ inputs.target }}*squashfs-combined-efi*"
          elif [ "${{ inputs.target }}" == "r4s" || "${{ inputs.target }}" == "r2s" ];then
            image_name_pattern="*${{ inputs.target }}*squashfs*"
          fi
          find bin/targets/ -type f -name "${image_name_pattern}" -exec cp {} artifact \;

      # - name: Upload buildinfo
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: OpenWrt_buildinfo
      #     path: ./artifact/buildinfo/     
          
