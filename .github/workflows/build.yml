name: Build sub target

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      subtarget:
        required: true
        type: string
      output_image_type:
        type: string
      openwrt_tag:
        type: string
      openwrt_dir:
        type: string
        default: /data/openwrt

defaults:
  run:
    shell: bash
  
jobs:
  build:
    name: Build ${{ inputs.target }}/${{ inputs.subtarget }}
    runs-on: self-hosted
    steps:
      - name: Init
        id: init
        run: |
          openwrt_tag=${{ inputs.openwrt_tag }}
          [ -n "${openwrt_tag}" ] || openwrt_tag=$(curl -sL https://github.com/openwrt/openwrt | sed -n 's/.*\/openwrt\/openwrt\/releases\/tag\/\(.*\)">/\1/p')
          echo "openwrt_tag=${openwrt_tag}" >> "$GITHUB_OUTPUT"
          echo "openwrt_branch=$(echo ${openwrt_tag} | sed 's/^v\([0-9][0-9]\.[0-9][0-9]\)\..\+/openwrt-\1/')" >> "$GITHUB_OUTPUT"
          
      - name: Checkout openwrt
        run: |
          openwrt_branch=${{ steps.init.outputs.openwrt_branch }}
          openwrt_tag=${{ steps.init.outputs.openwrt_tag }}
          openwrt_local_tag=
          if [ -d "${{ inputs.openwrt_dir }}/.git" ];then
            openwrt_local_tag=`cd ${{ inputs.openwrt_dir }} && git tag --points-at HEAD`
          fi
          if [ "${openwrt_tag}" != "${openwrt_local_tag}" ];then
            rm -rf ${{ inputs.openwrt_dir }}
            git clone https://github.com/openwrt/openwrt.git ${{ inputs.openwrt_dir }}
          fi
          cd ${{ inputs.openwrt_dir }} && git checkout --force ${openwrt_tag}
          sed -i -e "s|\^.*|;${openwrt_branch}|" feeds.conf.default
          echo "
          src-git helloworld https://github.com/fw876/helloworld;main
          src-git plugin https://github.com/czy21/openwrt-plugin.git
          " >> feeds.conf.default

      - name: Update
        working-directory: ${{ inputs.openwrt_dir }}
        run: |
          reset_feeds=(feeds/packages)
          for t in $reset_feeds;do
              if [ -d "$t/.git" ];then
              (cd $t && git reset --hard && git clean -xdf)
              fi
          done
          pwd
          ./scripts/feeds update -a && ./scripts/feeds install -a && ./feeds/plugin/main.sh install

      - name: Config
        working-directory: ${{ inputs.openwrt_dir }}
        run: |
          cp -rv feeds/plugin/config/${{ inputs.target }}/${{ inputs.subtarget }} .config
          rm -rf tmp && make defconfig

      - name: Download
        working-directory: ${{ inputs.openwrt_dir }}
        run: make download -j8
          
      - name: Compile
        working-directory: ${{ inputs.openwrt_dir }}
        run: |
          mkdir -p logs
          (make -j$(nproc) || make -j1 V=s) | tee logs/${{ inputs.target }}-${{ inputs.subtarget }}.log

      - name: Artifact
        working-directory: ${{ inputs.openwrt_dir }}
        run: |
          mkdir -p artifact
          find bin/targets/ -type f -name 'openwrt-*${{ inputs.target }}*${{ inputs.subtarget }}*${{ inputs.output_image_type }}*' -exec cp -rv {} artifact \;
          find bin/targets/ -type f -name "openwrt-*${{ inputs.target }}*${{ inputs.subtarget }}*.manifest" -exec cp -rv {} artifact \;
