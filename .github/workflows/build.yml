# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Build Openwrt official

on:
  # Runs on pushes targeting the default branch
  push:
    paths:
      - luci/**
      - package/**
  workflow_dispatch:
    inputs:
      target:
        required: true
        default: 'x86_64'
        options:
          - x86_64
          - r4s
          - r2s

# Default to bash
defaults:
  run:
    shell: bash

env:
  OPENWRT_TAG: v22.03.5
  OPENWRT_FEED_BRANCH: openwrt-22.03
  
jobs:
  # Build job
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: init
        run: |
          sudo apt update -y
          sudo apt install -y build-essential clang flex g++ gawk gcc-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget qemu-utils libelf-dev vim git make gcc
      - name: clone
        run: |
          git clone https://github.com/openwrt/openwrt.git
          cd openwrt
          git checkout ${OPENWRT_TAG}
          sed -i -e "s|\^.*|;${OPENWRT_FEED_BRANCH}|" feeds.conf.default
          echo "
          src-git helloworld https://github.com/fw876/helloworld
          src-git plugin https://github.com/czy21/openwrt-plugin.git
          " >> feeds.conf.default
      - name: update feeds
        working-directory: openwrt
        run: |
          ./scripts/feeds update -a && ./scripts/feeds install -a && ./feeds/plugin/sync.sh
      - name: test env
        working-directory: openwrt
        run: |
          echo  The target are ${{ inputs.target }}
      # - name: Generate configuration file
      #   working-directory: openwrt
      #   run: make defconfig

      # - name: download packages
      #   working-directory: openwrt
      #   run: make download -j16

      # - name: compile firmware
      #   working-directory: openwrt
      #   run: |
      #     make -j$(nproc) || make -j1 V=s
      #     echo "======================="
      #     echo "Space usage:"
      #     echo "======================="
      #     df -h
      #     echo "======================="
      #     du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
      #     du -h --max-depth=1 ./build_dir
      #     du -h --max-depth=1 ./bin

      # - name: Prepare artifact
      #   working-directory: openwrt
      #   run: |
      #     mkdir -p ./artifact/package
      #     mkdir -p ./artifact/buildinfo
      #     rm -rf $(find ./bin/targets/ -type d -name "packages")
      #     cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
      #     cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      # - name: Upload buildinfo
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: OpenWrt_buildinfo
      #     path: ./artifact/buildinfo/

      # - name: Upload package
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: OpenWrt_package
          
          
