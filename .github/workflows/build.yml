name: Build

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      device:
        required: true
        type: string
      device_image_type:
        type: string
      openwrt_tag:
        type: string
      openwrt_master:
        type: boolean

defaults:
  run:
    shell: bash
  
jobs:
  build:
    name: Build ${{ inputs.target }}/${{ inputs.device }}
    runs-on: self-hosted
    steps:
      - name: Init
        id: init
        run: |
          openwrt_dir=/data/openwrt
          openwrt_tag=${{ inputs.openwrt_tag }}
          openwrt_tag=${openwrt_tag:-$(curl -sL https://github.com/openwrt/openwrt | sed -n 's/.*\/openwrt\/openwrt\/releases\/tag\/\(.*\)">/\1/p')}
          openwrt_branch=$(echo ${openwrt_tag} | sed 's/^v\([0-9][0-9]\.[0-9][0-9]\)\..\+/openwrt-\1/')
          openwrt_master=${{ inputs.openwrt_master }}

          if [ "${openwrt_master}" == "true" ];then
            openwrt_branch=master
            openwrt_dir=${openwrt_dir}-${openwrt_branch}
          fi

          echo "openwrt_dir=${openwrt_dir}" >> "$GITHUB_OUTPUT"
          echo "openwrt_tag=${openwrt_tag}" >> "$GITHUB_OUTPUT"
          echo "openwrt_branch=${openwrt_branch}" >> "$GITHUB_OUTPUT"

          subtarget=$(echo '${{ inputs.device }}' | cut -d"-" -f1)
          echo "subtarget=${subtarget}" >> "$GITHUB_OUTPUT"
          
      - name: Checkout openwrt
        run: |
          # git_repo=https://github.com
          git_repo=http://gitea.czy21-internal.com

          [ -d "${{ steps.init.outputs.openwrt_dir }}/.git" ] || git clone $git_repo/openwrt/openwrt.git ${{ steps.init.outputs.openwrt_dir }}
          
          cd ${{ steps.init.outputs.openwrt_dir }}
          git fetch --all --tags --force
          
          openwrt_master=${{ inputs.openwrt_master }}

          if [ "${openwrt_master}" == "true" ];then
            git checkout -B ${{ steps.init.outputs.openwrt_branch }} origin/${{ steps.init.outputs.openwrt_branch }} --force
          else
            git checkout ${{ steps.init.outputs.openwrt_tag }} --force
          fi

          sed -i -e "s|https://git.openwrt.org.*/\(.*\).git|$git_repo/openwrt/\1.git|" -e "s|\^.*|;${{ steps.init.outputs.openwrt_branch }}|" feeds.conf.default
          
          echo "
          src-git helloworld https://github.com/fw876/helloworld;main
          src-git openclash  https://github.com/vernesong/OpenClash.git;master
          src-git plugin https://github.com/czy21/openwrt-plugin.git
          " >> feeds.conf.default

      - name: Update
        working-directory: ${{ steps.init.outputs.openwrt_dir }}
        run: |
          reset_feeds=(feeds/packages)
          for t in ${reset_feeds[@]};do
            [ -d "$t/.git" ] && (cd $t && git reset --hard && git clean -xdf)
          done
          ./scripts/feeds update -a && ./scripts/feeds install -a && ./feeds/plugin/main.sh install ${{ inputs.openwrt_master && '--openwrt-master' || '' }}

      - name: Config
        id: config
        working-directory: ${{ steps.init.outputs.openwrt_dir }}
        run: |
          openwrt_master=${{ inputs.openwrt_master }}

          if [[ "${openwrt_master}" == "true" && -f "feeds/plugin/config/master/${{ inputs.target }}/${{ inputs.device }}" ]];then
            cp -rv feeds/plugin/config/master/${{ inputs.target }}/${{ inputs.device }} .config
          else
            cp -rv feeds/plugin/config/${{ inputs.target }}/${{ inputs.device }} .config
          fi

          openwrt_devices=$(sed -n 's|.*${{ steps.init.outputs.subtarget }}_DEVICE_\(.*\)=y|\1|p' .config | xargs)
          echo ${openwrt_devices}
          echo "openwrt_devices=${openwrt_devices}" >> "$GITHUB_OUTPUT"
          rm -rf tmp && make defconfig

      - name: Download
        working-directory: ${{ steps.init.outputs.openwrt_dir }}
        run: make download -j8
          
      - name: Compile
        working-directory: ${{ steps.init.outputs.openwrt_dir }}
        run: |
          mkdir -p logs
          (make -j8 || make -j1 V=s) | tee logs/${{ inputs.target }}-${{ inputs.device }}.log

      - name: Artifact
        working-directory: ${{ steps.init.outputs.openwrt_dir }}
        env:
          MC_HOST_TARGET: http://${{ secrets.MINIO_ACCESS_KEY }}:${{ secrets.MINIO_SECRET_KEY }}@${{ secrets.MINIO_ENDPOINT }}
        run: |
          artifact_dir=bin/artifact
          mkdir -p $artifact_dir
          openwrt_devices="${{ steps.config.outputs.openwrt_devices }}"
          for d in $openwrt_devices;do
            rm -rfv $artifact_dir/openwrt-${{ inputs.target }}-${{ steps.init.outputs.subtarget }}*$d*
            find bin/targets/${{ inputs.target }} -type f -name "openwrt-${{ inputs.target }}-${{ steps.init.outputs.subtarget }}-*$d*${{ inputs.device_image_type }}*" -not -name "*.manifest" -exec cp -rv {} $artifact_dir \;
            find bin/targets/${{ inputs.target }} -type f -name "openwrt-${{ inputs.target }}-${{ steps.init.outputs.subtarget }}*.manifest" \
              -exec sh -c "f={};(echo $f | grep \"$d\" -q) && cp -rv $f $artifact_dir/ || cp -rv {} $artifact_dir/openwrt-${{ inputs.target }}-${{ steps.init.outputs.subtarget }}-$d.manifest"  \;
            mc cp --json $artifact_dir/openwrt-${{ inputs.target }}-${{ steps.init.outputs.subtarget }}*$d* TARGET/${{ secrets.MINIO_BUCKET }}/${{ inputs.openwrt_master && steps.init.outputs.openwrt_branch || steps.init.outputs.openwrt_tag }}/
          done
