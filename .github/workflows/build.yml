name: Build Openwrt Official
on:
  workflow_dispatch:
    inputs:
      target:
        required: true
        default: 'x86-64'
        type: choice
        options:
          - x86-64
          - r4s
          - r2s
      first_build:
        required: true
        default: false
        type: boolean

defaults:
  run:
    shell: bash
  
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: init
        working-directory: /data/openwrt
        run: |
          echo "openwrt_target=${{ inputs.target }}" >> "$GITHUB_ENV"
          echo "openwrt_version=$(git describe)" >> "$GITHUB_ENV"
          echo "first_build=${{ inputs.first_build }}" >> "$GITHUB_ENV"

      - name: update
        working-directory: /data/openwrt
        run: ./scripts/feeds update -a && ./scripts/feeds install -a && ./feeds/plugin/sync.sh

      - name: config
        working-directory: /data/openwrt
        run: |
          if [[ "${openwrt_target}" =~ r[0-9]+s ]];then
            cp -rv feeds/plugin/config/rxs .config 
            echo "CONFIG_TARGET_rockchip_armv8_DEVICE_friendlyarm_nanopi-${openwrt_target}=y" > .config
          else
            cp -rv feeds/plugin/config/${openwrt_target} .config
          fi
          [ "${first_build}" == "true" ] && sed -i -n '/CONFIG_TARGET/p' .config
          rm -rf tmp && make defconfig

      - name: download
        working-directory: /data/openwrt
        run: make download -j8

      - name: compile
        working-directory: /data/openwrt
        run: |
          thread_num=$(($(nproc)+1))
          [ "${first_build}" == "true" ] && thread_num=1
          echo -e "${thread_num} thread compile"
          (make -j${thread_num} || make -j1 V=s) | tee ${openwrt_target}.compile.log
          
      - name: artifact
        working-directory: /data/openwrt
        run: |
          openwrt_artifact=artifact/${openwrt_version} && mkdir -p ${openwrt_artifact}
          openwrt_name_pattern="openwrt*${openwrt_target}*squashfs*"
          [ "${openwrt_target}" == "x86-64" ] && openwrt_name_pattern+="combined-efi*"
          find bin/targets/ -type f -name "${openwrt_name_pattern}" -exec cp {} ${openwrt_artifact} \;

  deploy:
    runs-on: self-hosted
    needs: 
      - build
    if: ${{ always() }}
    steps:
      - name: upload to nas
        working-directory: /data/openwrt
        run: scp -o StrictHostKeyChecking=no -i /data/.ssh/czy-rsa -r artifact/* opsor@dsm.czy21-internal.com:/volume1/public/developer/linux/routeros/openwrt/