name: Build

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      subtarget:
        required: true
        type: string
      output_image_type:
        type: string
      openwrt_tag:
        type: string
      openwrt_master:
        type: boolean

defaults:
  run:
    shell: bash
  
jobs:
  build:
    name: Build ${{ inputs.target }}/${{ inputs.subtarget }}
    runs-on: self-hosted
    steps:
      - name: Init
        id: init
        run: |
          openwrt_dir=/data/openwrt
          openwrt_tag=${{ inputs.openwrt_tag }}
          [ -n "${openwrt_tag}" ] || openwrt_tag=$(curl -sL https://github.com/openwrt/openwrt | sed -n 's/.*\/openwrt\/openwrt\/releases\/tag\/\(.*\)">/\1/p')
          echo "openwrt_tag=${openwrt_tag}" >> "$GITHUB_OUTPUT"
          echo "openwrt_branch=$(echo ${openwrt_tag} | sed 's/^v\([0-9][0-9]\.[0-9][0-9]\)\..\+/openwrt-\1/')" >> "$GITHUB_OUTPUT"

          if [ "${{ inputs.openwrt_master }}" == "true" ];then
            echo "openwrt_dir=${openwrt_dir}-master" >> "$GITHUB_OUTPUT"
            echo "openwrt_branch=master" >> "$GITHUB_OUTPUT"
          fi
          
      - name: Checkout openwrt
        run: |
          # git_repo=https://github.com
          git_repo=http://gitea.czy21-internal.com

          if [ ! -d "${{ steps.init.outputs.openwrt_dir }}/.git" ];then
            git clone $git_repo/openwrt/openwrt.git ${{ steps.init.outputs.openwrt_dir }}
          fi
          
          cd ${{ steps.init.outputs.openwrt_dir }}
          git fetch --all --tags --force
          if [ "${{ inputs.openwrt_master }}" == "true" ];then
            git checkout -B ${{ steps.init.outputs.openwrt_branch }} origin/${{ steps.init.outputs.openwrt_branch }} --force
          else
            git checkout ${{ steps.init.outputs.openwrt_tag }} --force
          fi

          sed -i -e "s|https://git.openwrt.org.*/\(.*\).git|$git_repo/openwrt/\1.git|" -e "s|\^.*|;${{ steps.init.outputs.openwrt_branch }}|" feeds.conf.default
          
          echo "
          src-git helloworld https://github.com/fw876/helloworld;main
          src-git openclash  https://github.com/vernesong/OpenClash.git;master
          src-git plugin https://github.com/czy21/openwrt-plugin.git
          " >> feeds.conf.default

      - name: Update
        working-directory: ${{ steps.init.outputs.openwrt_dir }}
        run: ./scripts/feeds update -a || (./scripts/feeds clean -a && ./scripts/feeds update -a) && ./scripts/feeds install -a && ./feeds/plugin/main.sh install

      - name: Config
        working-directory: ${{ steps.init.outputs.openwrt_dir }}
        run: |
          if [[ "${{ inputs.openwrt_master }}" == "true" && -f "feeds/plugin/config/master/${{ inputs.target }}/${{ inputs.subtarget }}" ]];then
            cp -rv feeds/plugin/config/master/${{ inputs.target }}/${{ inputs.subtarget }} .config
          else
            cp -rv feeds/plugin/config/${{ inputs.target }}/${{ inputs.subtarget }} .config
          fi
          sed -n 's|.*${{ inputs.subtarget }}_DEVICE_\(.*\)=y|\1|p' .config | xargs echo Devices:
          rm -rf tmp && make defconfig

      - name: Download
        working-directory: ${{ steps.init.outputs.openwrt_dir }}
        run: make download -j8
          
      - name: Compile
        working-directory: ${{ steps.init.outputs.openwrt_dir }}
        run: |
          mkdir -p logs
          (make -j8 || make -j1 V=s) | tee logs/${{ inputs.target }}-${{ inputs.subtarget }}.log

      - name: Artifact
        working-directory: ${{ steps.init.outputs.openwrt_dir }}
        run: |
          artifact_dir=bin/artifact
          mkdir -p $artifact_dir
          find bin/targets/${{ inputs.target }} -type f -name "openwrt-*${{ inputs.subtarget }}*${{ inputs.output_image_type }}*" -exec cp -rv {} $artifact_dir \;
          find bin/targets/${{ inputs.target }} -type f -name "openwrt-*${{ inputs.subtarget }}*.manifest" -exec cp -rv {} $artifact_dir \;