name: Build images

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      subtarget:
        required: true
        type: string
      openwrt_tag:
        type: string
      openwrt_tag_version:
        type: string
      artifact_dir: 
        required: false
        type: string
        default: /volume2/storage/docker-data/ubuntu-openwrt/data/download

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build ${{ inputs.target }}/${{ inputs.subtarget }}
    runs-on: self-hosted
    needs: [init]
    container:
      image: openwrt/imagebuilder:${{ inputs.target }}-${{ inputs.subtarget }}-${{ inputs.openwrt_tag }}
      volumes:
        - ${{ inputs.target }}-${{ inputs.subtarget }}-${{ inputs.openwrt_tag }}:/builder
        - ${{ inputs.artifact_dir }}/arch-targets/:/builder/bin/targets/
      options: --user root --privileged --pull always
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Modify permission
        working-directory: /builder
        run: chown buildbot:buildbot bin

      - name: Modify repositories.conf
        shell: su buildbot -c "bash {0}"
        working-directory: /builder
        run: |
          id;pwd;ls -al
          openwrt_plugin=$(sed -n 's|openwrt_base\(.*\)base$|openwrt_plugin\1plugin|p' repositories.conf)
          sed -i -e "1i$openwrt_plugin" repositories.conf 
          sed -i -e "s|https://downloads.openwrt.org|http://openwrt-firmware.czy21-internal.com/download|" -e 's|^option check_signature|# \0|' repositories.conf
          cat repositories.conf

      - name: Generate
        shell: su buildbot -c "bash {0}"
        run: python3 -B .github/workflows/scripts/gen_image.py --openwrt-dir /builder --config config --target ${{ inputs.target }}/${{ inputs.subtarget }}

  clean:
    runs-on: self-hosted
    needs: [init,build]
    if: always()
    steps:
      - run: |
          volume_names=$(docker volume ls -q | grep '${{ inputs.target }}-${{ inputs.subtarget }}-${{ inputs.openwrt_tag }}' || true | xargs )
          if [ -n "${volume_names}" ];then
            docker volume rm $volume_names
          fi