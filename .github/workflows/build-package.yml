name: Build packages

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      openwrt_branch:
        type: string
      packages:
        type: string
      debug: 
        type: boolean

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build ${{ inputs.arch }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine branch
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          echo "GithubRef for $BRANCH"
          BRANCH=${BRANCH:-main}
          echo "Building for $BRANCH"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Determine packages
        run: |
          EXTRA_FEEDS="src-git|openclash|https://github.com/vernesong/OpenClash.git;master"
          echo "EXTRA_FEEDS=$EXTRA_FEEDS" >> $GITHUB_ENV
          
          PACKAGES=
          INPUT_PACKAGES="${{ inputs.packages }}"
          if [[ "$INPUT_PACKAGES" =~ "luci" ]];then
            PACKAGES+="luci-base "
          fi
          if [[ ! "$INPUT_PACKAGES" =~ "all" ]];then
            # only detect packages with changes
            PKG_ROOTS=$(find . -name Makefile | grep -v ".*/src/Makefile" | sed -e 's@./\(.*\)/Makefile@\1/@')
            CHANGES=$(git diff --diff-filter=d --name-only origin/$BRANCH...)
  
            for ROOT in $PKG_ROOTS; do
              for CHANGE in $CHANGES; do
                if [[ "$CHANGE" == "$ROOT"* ]]; then
                  PACKAGES+=$(echo "$ROOT" | sed -e 's@.*/\(.*\)/@\1 @')
                  break
                fi
              done
            done
            
            for t in $INPUT_PACKAGES;do
              flag=false
              for s in $PACKAGES;do
                if [[ "$t" == "$s" ]]; then
                  flag=true
                  break
                fi
              done
              if [ $flag == "false" ];then
                PACKAGES+="$t "
              fi
            done
            PACKAGES="${PACKAGES:-luci-app-attendedsysupgrade}"
          fi

          echo "Building $PACKAGES"
          echo "PACKAGES=$PACKAGES" >> $GITHUB_ENV

      - name: Build
        uses: openwrt/gh-action-sdk@v7
        env:
          ARCH: ${{ inputs.arch }}-${{ inputs.openwrt_branch }}
          FEEDNAME: packages_ci
          V: ${{ inputs.debug && 's' || '' }}

      - name: Move created packages to project dir
        run: |
          ls -alR bin/packages
          
          artifact_dir=bin/artifact/${{ inputs.arch }}/plugin
          mkdir -p ${artifact_dir}
          
          for EXTRA_FEED in $EXTRA_FEEDS; do
              EXTRA_FEED_NAME="$(echo "$EXTRA_FEED" | cut -d'|' -f2)"
              cp bin/packages/${{ inputs.arch }}/$EXTRA_FEED_NAME/*.ipk $artifact_dir || true
          done
          
          cp bin/packages/${{ inputs.arch }}/packages_ci/*.ipk ${artifact_dir} || true

      - name: Store packages
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.arch }}-packages
          path: bin/artifact/

      - name: Store logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.arch }}-logs
          path: "logs/"