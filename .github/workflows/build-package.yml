name: Build packages

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      subtarget:
        required: true
        type: string
      openwrt_branch:
        type: string

jobs:
  build:
    name: Build ${{ inputs.target }}/${{ inputs.subtarget }}
    runs-on: ubuntu-latest
    needs: [init]
    container:
      image: openwrt/sdk:${{ inputs.target }}-${{ inputs.subtarget }}-${{ inputs.openwrt_branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          path: /tmp/${{ github.repository }}
          
      - name: Set env
        id: set_env
        working-directory: /tmp/${{ github.repository }}
        run: |
          ls -alR /tmp
          PACKAGES=$(find package -maxdepth 1 -not -path package -exec basename {} \; | xargs)
          PACKAGES+=$(find luci -maxdepth 1 -not -path luci -not -name '*bundle*' -exec basename {} \; | xargs)
          
          PACKAGES="${PACKAGES:-luci-app-attendedsysupgrade}"

          echo "Custom packages: $PACKAGES"
          echo "PACKAGES=$PACKAGES" >> "$GITHUB_ENV"

      - name: Checkout openwrt
        working-directory: /builder
        run: |
          id;pwd;ls -al
          ls -al /tmp
          git_repo=https://github.com

          sed -i -e "s|https://git.openwrt.org.*/\(.*\).git|$git_repo/openwrt/\1.git|" feeds.conf.default
          
          echo "
          src-git helloworld https://github.com/fw876/helloworld;main
          src-git openclash  https://github.com/vernesong/OpenClash.git;master
          src-git plugin https://github.com/czy21/openwrt-plugin.git
          " >> feeds.conf.default

      - name: Update
        working-directory: /builder
        run: |
          [ -d "feeds" ] && find feeds -maxdepth 2 -name ".git" -exec sh -c 't=$(realpath {}/../);cd $t;pwd;git reset --hard;git clean -xdf' \;
          ./scripts/feeds update -a && ./scripts/feeds install -a && ./feeds/plugin/main.sh install ${{ inputs.openwrt_branch == 'master' && '--openwrt-master' || '' }}

      - name: Config
        working-directory: /builder
        run: make defconfig
          
      - name: Compile
        working-directory: /builder
        run: |
          mkdir -p logs
          for t in $PACKAGES;do
            echo $t
            # (make -j8 package/$t/compile || make -j1 package/$t/compile V=s) | tee logs/${{ inputs.target }}-${{ inputs.device }}.log
          done