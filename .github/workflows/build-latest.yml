name: Build latest stable tag

on:
  workflow_dispatch:

env:
  openwrt_workdir: /data/openwrt

jobs:
  setup:
    name: Setup
    runs-on: self-hosted
    outputs:
      targets: ${{ steps.find_targets.outputs.targets }}
      targets_subtargets: ${{ steps.find_targets.outputs.targets_subtargets }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get latest stable tag
        id: get_latest_stable_tag
        run: |
          echo "openwrt_tag=$(curl -s https://api.github.com/repos/openwrt/openwrt/releases/latest | sed -n '/tag_name/p' | sed 's|^\s*"tag_name": "\(.*\)",|\1|')" >> "$GITHUB_OUTPUT"
      - name: Set targets
        id: find_targets
        run: |
          python3 -B function/get_targets.py | while read v;do echo "$v" >> "$GITHUB_OUTPUT"; done
      - name: Checkout Openwrt
        run: |
          openwrt_tag=${{ steps.get_latest_stable_tag.outputs.openwrt_tag }}
          openwrt_dir_tag=`[ -d ${{ env.openwrt_workdir }} ] && (cd ${{ env.openwrt_workdir }} && git tag --points-at HEAD 2>/dev/null)`
          if [ "${openwrt_tag}" != ${openwrt_dir_tag} ];then
            rm -rf ${{ env.openwrt_workdir }}
            git clone http://gitea.czy21-internal.com/openwrt/openwrt.git ${{ env.openwrt_workdir }}
          fi
          cd ${{ env.openwrt_workdir }} && git checkout feeds.conf.default
          openwrt_branch=`git branch -a --contains ${openwrt_tag} 2>/dev/null| sed -n '/remotes\/origin/p' | sed -e 's|^\s*remotes/origin/||'`
          [ -n "${openwrt_branch}" ] && sed -i -e 's|https://git.openwrt.org/\(.*\)/|http://gitea.czy21-internal.com/openwrt/|g' -e "s|\^.*|;${openwrt_branch}|" feeds.conf.default
          echo "
          src-git helloworld https://github.com/fw876/helloworld
          src-git plugin https://github.com/czy21/openwrt-plugin.git
          " >> feeds.conf.default
  
  build:
    name: Build target
    needs: setup
    strategy:
       fail-fast: false
       matrix:
         include: ${{fromJson(needs.setup.outputs.targets_subtargets)}}
    uses: ./.github/workflows/build.yml
    with:
      target: ${{ matrix.target }}
      subtarget: ${{ matrix.subtarget }}
      output_image_type: ${{ matrix.output_image_type }}