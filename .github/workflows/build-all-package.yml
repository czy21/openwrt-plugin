name: Build all packages

on:
  push:
    paths:
      - luci/**
      - package/**
  workflow_dispatch:
    inputs:
      openwrt_tag:
        type: string
      packages:
        type: string
        description: "empty only build changed or input special package names or input all will build all"
      debug:
        type: boolean
        default: false

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.get_targets.outputs.targets }}
      targets_subtargets: ${{ steps.get_targets.outputs.targets_subtargets }}
      targets_devices: ${{ steps.get_targets.outputs.targets_devices }}
      archs: ${{ steps.get_targets.outputs.archs }}
      openwrt_dir: ${{ steps.set_env.outputs.openwrt_dir }}
      openwrt_tag: ${{ steps.set_env.outputs.openwrt_tag }}
      openwrt_tag_version: ${{ steps.set_env.outputs.openwrt_tag_version }}
      openwrt_branch: ${{ steps.set_env.outputs.openwrt_branch }}
      openwrt_branch_version: ${{ steps.set_env.outputs.openwrt_branch_version }}
      openwrt_builder_volume: ${{ steps.set_env.outputs.openwrt_builder_volume }}
      artifact_dir: ${{ steps.set_env.outputs.artifact_dir }}
      artifact_targets_rel: ${{ steps.set_env.outputs.artifact_targets_rel }}
      artifact_packages_rel: ${{ steps.set_env.outputs.artifact_packages_rel }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set env
        id: set_env
        run: |
          openwrt_dir=/data/openwrt
          openwrt_tag=${{ inputs.openwrt_tag }}
          openwrt_tag=${openwrt_tag:-$(curl -sL https://github.com/openwrt/openwrt | sed -n 's/.*\/openwrt\/openwrt\/releases\/tag\/\(.*\)">/\1/p')}
          openwrt_tag_version=$(echo $openwrt_tag | sed 's|^v||')
          openwrt_branch=$(echo ${openwrt_tag} | sed 's/^v\([0-9][0-9]\.[0-9][0-9]\)\..\+/openwrt-\1/')
          openwrt_branch_version=$(echo $openwrt_branch | sed 's|openwrt-||')

          echo "openwrt_dir=${openwrt_dir}" >> "$GITHUB_OUTPUT"
          echo "openwrt_tag=${openwrt_tag}" >> "$GITHUB_OUTPUT"
          echo "openwrt_tag_version=${openwrt_tag_version}" >> "$GITHUB_OUTPUT"
          echo "openwrt_branch=${openwrt_branch}" >> "$GITHUB_OUTPUT"
          echo "openwrt_branch_version=${openwrt_branch_version}" >> "$GITHUB_OUTPUT"

          openwrt_builder_volume=/volume2/storage/docker-data/openwrt-builder/data/
          echo "openwrt_builder_volume=${openwrt_builder_volume}" >> "$GITHUB_OUTPUT"

          artifact_targets_rel=releases/$openwrt_tag_version/targets
          artifact_packages_rel=releases/packages-$openwrt_branch_version
          
          echo "artifact_targets_rel=${artifact_targets_rel}" >> "$GITHUB_OUTPUT"
          echo "artifact_packages_rel=${artifact_packages_rel}" >> "$GITHUB_OUTPUT"

      - name: Get targets
        id: get_targets
        run: python3 -B ./.github/workflows/scripts/get_targets.py | while read v;do echo "$v" >> "$GITHUB_OUTPUT"; done
  
  build:
    name: Build
    needs: setup
    uses: ./.github/workflows/build-package.yml
    strategy:
       fail-fast: false
       matrix:
         arch: ${{fromJson(needs.setup.outputs.archs)}}
    with:
      arch: ${{ matrix.arch }}
      openwrt_branch: ${{ needs.setup.outputs.openwrt_branch }}
      packages: ${{ inputs.packages }}
      debug: ${{ inputs.debug }}

  deploy:
    name: Deploy
    runs-on: self-hosted
    needs: [setup,build]
    container:
      image: czy21/openwrt-builder
      volumes:
        - ${{ needs.setup.outputs.openwrt_builder_volume }}/:/data/
      options: --user root --privileged --pull always
    steps:
      - name: Clone openwrt
        shell: su buildbot -c "bash {0}"
        run: |
          git_repo=http://gitea.czy21-internal.com
          [ -d "${{ needs.setup.outputs.openwrt_dir }}/.git" ] || git clone $git_repo/openwrt/openwrt.git ${{ needs.setup.outputs.openwrt_dir }}
          
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: /data/download/${{ needs.setup.outputs.artifact_packages_rel }}
          pattern: '*-packages'
          merge-multiple: true

      - working-directory: /data/openwrt
        shell: su buildbot -c "bash {0}"
        run: |
          for t in $(find /data/download/${{ needs.setup.outputs.artifact_packages_rel }} -type d -name 'plugin');do
            make -j4 package/index V=s CONFIG_SIGNED_PACKAGES= PACKAGE_SUBDIRS=$t
          done